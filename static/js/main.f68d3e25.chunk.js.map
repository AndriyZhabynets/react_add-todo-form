{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","href","className","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","getTodoId","Math","max","todosWithUsers","App","useState","setUserId","setTitle","setTodos","hasUserIdError","setUserIdError","hasTitleError","setTitleError","action","method","onSubmit","event","preventDefault","trimTitle","trim","newTodo","currentTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f68d3e25.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n  },\r\n];\r\n","import { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a data-id={user.id} href={`mailto:${user.email}`} className=\"UserInfo\">\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { TodoWithUser } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './react-app-env';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n\nconst getTodoId = (todos: TodoWithUser[]) => {\n  const maxTodoId = Math.max(...todos.map(todo => todo.id));\n\n  return maxTodoId + 1;\n};\n\nconst todosWithUsers: TodoWithUser[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState<TodoWithUser[]>(todosWithUsers);\n  const [hasUserIdError, setUserIdError] = useState(false);\n  const [hasTitleError, setTitleError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserIdError(false);\n    setUserId(+event.target.value);\n  };\n\n  const handleInput = (event : React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(event.target.value);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimTitle = title.trim();\n\n    setUserIdError(!userId);\n    setTitleError(!trimTitle);\n\n    if (!trimTitle || !userId) {\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: getTodoId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\r\n  {\r\n    id: 1,\r\n    title: 'delectus aut autem',\r\n    completed: true,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'some other todo',\r\n    completed: false,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'quis ut nam facilis et officia qui',\r\n    completed: false,\r\n    userId: 4,\r\n  },\r\n];\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}